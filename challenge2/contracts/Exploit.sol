//SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;

import "hardhat/console.sol";
import '@openzeppelin/contracts/token/ERC20/ERC20.sol';

interface ICToken{
    function mint(uint mintAmount) external returns (uint);
    function borrow(uint borrowAmount) external returns (uint);
    function redeemUnderlying(uint256 redeemAmount) external returns (uint256);
}

interface WETH{
    function deposit() external payable;
    function withdraw(uint256) external;
}

interface IComptroller{
    function enterMarkets(address[] calldata cTokens) external returns (uint[] memory);
    function exitMarket(address fToken) external returns (uint256);
    function getAccountLiquidity(address account) external view returns (uint, uint, uint);
}

interface IUniswap{
    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;
}

interface ICEther{
    function mint() external payable;
    function borrow(uint256) external returns (uint);
}

interface IAMP{
    function registerCollateralManager() external;
}

interface IERC1820{
    function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer) external ;
}

interface IRouter{
    function swapTokensForExactETH(
        uint amountOut,
        uint amountInMax,
        address[] calldata path,
        address to,
        uint deadline
    ) external returns (uint[] memory amounts);

function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)
        external
        returns (uint[] memory amounts);
}

contract Exploit {

    address comptroller = 0x3d5BC3c8d13dcB8bF317092d84783c2697AE9258;
    address cramp = 0x2Db6c82CE72C8d7D770ba1b5F5Ed0b6E075066d6;
    address creth = 0xD06527D5e56A3495252A528C4987003b712860eE;
    address cdai = 0x92B767185fB3B04F881e3aC8e5B0662a027A1D9f;

    address amp = 0xfF20817765cB7f73d4bde2e66e067E58D11095C2;
    address dai = 0x6B175474E89094C44Da98b954EedeAC495271d0F;
    address weth = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;

    address uniswapPool = 0x21b8065d10f73EE2e260e5B47D3344d3Ced7596E;
    address v2router = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;

    address ampwethpool = 0x08650bb9dc722C9c8C62E79C2BAfA2d3fc5B3293;

    address erc1820registry = 0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24;

    string internal constant AMP_TOKENS_RECIPIENT = "AmpTokensRecipient";

    function start() external {
        console.log("Good to go.");
    }

    function tokensReceived(
        bytes4 functionSig,
        bytes32 partition,
        address operator,
        address from,
        address to,
        uint256 value,
        bytes calldata data,
        bytes calldata operatorData
    ) external {
        console.log("We are in the callback now");
    }
    fallback() external payable {}
    receive() external payable {}
}
